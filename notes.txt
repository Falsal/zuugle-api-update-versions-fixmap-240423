
https://github.com/bahnzumberg/zuugle-api.git

Following the instructions in READ.me



First make sure nvm is installed, then use the version 
Step : nvm use <version_number> 
The version number I took from the package.json, so this worked , message:

falsalih@Fariss-MacBook-Pro zuugle-api % nvm use
	Found '/Users/falsalih/Documents/ACTIVEFILE/Zuugle/zuugle-api/.nvmrc' 
        with version <14>
	Now using node v14.15.1 (npm v6.14.8)

	nvm use should be functioning now

Step: npm install 

It did not work , did not install the dependencies, console message :

	> libpq@1.8.12 install /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-test/
	zuugle-api/node_modules/libpq
	> node-gyp rebuild

	/bin/sh: pg_config: command not found
	gyp: Call to 'pg_config --libdir' returned exit status 127 while in binding.gyp. 
	while trying to load binding.gyp
	gyp ERR! configure error 
	gyp ERR! stack Error: `gyp` failed with exit code: 1
	gyp ERR! stack     at ChildProcess.onCpExit (/Users/falsalih/.nvm/versions/
	node/v14.15.1/lib/node_modules/npm/node_modules/node-gyp/lib/	
	configure.js:351:16)
	gyp ERR! stack     at ChildProcess.emit (events.js:315:20)
	gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/
	child_process.js:277:12)
	gyp ERR! System Darwin 22.1.0
	gyp ERR! command "/Users/falsalih/.nvm/versions/node/v14.15.1/bin/node" 
	"/Users/falsalih/.nvm/versions/node/v14.15.1/lib/node_modules/npm/		
	node_modules/node-gyp/bin/node-gyp.js" "rebuild"
	gyp ERR! cwd /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-test/
	zuugle-api/node_modules/libpq
	gyp ERR! node -v v14.15.1
	gyp ERR! node-gyp -v v5.1.0
	gyp ERR! not ok 
	npm WARN zuggle-api@1.0.0 No description
	npm WARN zuggle-api@1.0.0 No repository field.

	npm ERR! code ELIFECYCLE
	npm ERR! errno 1
	npm ERR! libpq@1.8.12 install: `node-gyp rebuild`
	npm ERR! Exit status 1
	npm ERR! 
	npm ERR! Failed at the libpq@1.8.12 install script.
	npm ERR! This is probably not a problem with npm. There is likely additional 
	logging output above.

	npm ERR! A complete log of this run can be found in:
	npm ERR!     /Users/falsalih/.npm/_logs/2023-01-07T19_54_26_648Z-
	debug.log

Going through the error message , there was a problem with “libpq” installation.
definition: 
“ libpq is a set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries. libpq is also the underlying engine for several other PostgreSQL application interfaces, including those written for C++, Perl, Python, Tcl and ECPG.“

After a few searches on stack overflow, links searched :
https://github.com/brianc/node-libpq/issues
https://github.com/brianc/node-libpq/issues/91
https://github.com/nodejs/node-gyp/issues/2731
https://github.com/nodejs/node-gyp/issues/2761
https://github.com/netlify/build-image/issues/393

(Below link contains a collection of errors)
https://stackoverflow.com/questions/74188886/is-there-another-way-to-troubleshoot-libpq-gyp-errors-with-netlify-build-errors 
https://answers.netlify.com/t/build-failing-with-gyp-error/44167/15


I found I had to install libpq, but since it was installed once before, tried to reinstall just to be on the safe side, here is the message on console:

Fariss-MacBook-Pro:zuugle-api falsalih$ brew install libpq
Warning: libpq 15.1 is already installed and up-to-date.
To reinstall 15.1, run:
  brew reinstall libpq

Fariss-MacBook-Pro:zuugle-api falsalih$ brew reinstall libpq 

This gave me a long message on console and seemed to work and gave me following commands to
link the path to libpq:

Fariss-MacBook-Pro:zuugle-api falsalih$ echo 'export PATH="/opt/homebrew/opt/libpq/bin:$PATH"' >> ~/.zshrc
Fariss-MacBook-Pro:zuugle-api falsalih$   echo 'export PATH="/opt/homebrew/opt/libpq/bin:$PATH"'
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
Fariss-MacBook-Pro:zuugle-api falsalih$ export LDFLAGS="-L/opt/homebrew/opt/libpq/lib"
Fariss-MacBook-Pro:zuugle-api falsalih$ export CPPFLAGS="-I/opt/homebrew/opt/libpq/include"

Fariss-MacBook-Pro:zuugle-api falsalih$ brew install libpq

This final command gave me the next messages:
Fariss-MacBook-Pro:zuugle-api falsalih$ brew link --force libpq
	Linking /opt/homebrew/Cellar/libpq/15.1... 378 symlinks created.

	If you need to have this software first in your PATH instead consider running:
  	echo 'export PATH="/opt/homebrew/opt/libpq/bin:$PATH"' >> ~/.zshrc

checking psql version:
Fariss-MacBook-Pro:zuugle-api falsalih$ psql --version
	psql (PostgreSQL) 15.1


So now my attempt at installing npm seem to work:
npm install

falsalih@Fariss-MacBook-Pro zuugle-api % npm install

	> libpq@1.8.12 install /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-test/
	zuugle-api/node_modules/libpq
	> node-gyp rebuild

  	CXX(target) Release/obj.target/addon/src/connection.o
  	CXX(target) Release/obj.target/addon/src/connect-async-worker.o
  	CXX(target) Release/obj.target/addon/src/addon.o
  	SOLINK_MODULE(target) Release/addon.node
	ld: warning: ignoring file /opt/homebrew/opt/libpq/lib/libpq.dylib, building for 
	macOS-x86_64 but attempting to link with file built for macOS-arm64
	npm WARN zuggle-api@1.0.0 No description
	npm WARN zuggle-api@1.0.0 No repository field.

	added 7 packages from 4 contributors and audited 928 packages in 7.659s

	38 packages are looking for funding
  	run `npm fund` for details
	found 16 vulnerabilities (2 low, 6 moderate, 8 high)
  	run `npm audit fix` to fix them, or `npm audit` for details

Next step : docker build -t zuugle-postgres-db ./

falsalih@Fariss-MacBook-Pro zuugle-api % docker build -t zuugle-postgres-db ./
	[+] Building 1.5s (7/7) FINISHED                                                                               
 	=> [internal] load build definition from Dockerfile                                                      0.0s
 	=> => transferring dockerfile: 168B                                                                      0.0s
 	=> [internal] load .dockerignore                                                                         0.0s
 	=> => transferring context: 2B                                                                           0.0s
 	=> [internal] load metadata for docker.io/library/postgres:latest                                        1.4s
 	=> [internal] load build context                                                                         0.0s
 	=> => transferring context: 7.16kB                                                                       0.0s
 	=> [1/2] FROM docker.io/library/postgres@sha256:f4cd32e7a418d9c9ba043e7d561243388202b654c740bcc85ca40b4  0.0s
 	=> CACHED [2/2] COPY database.sql /docker-entrypoint-initdb.d/                                           0.0s
 	=> exporting to image                                                                                    0.0s
 	=> => exporting layers                                                                                   0.0s
 	=> => writing image sha256:d9d41b23bd72001aaaa8316f65bd4db88e9d625a06f7ac462fb3e9858c266cb5              0.0s
 	=> => naming to docker.io/library/zuugle-postgres-db                                                     0.0s

	Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them

Next step : 	docker run -d --name zuugle-container -p 5432:5432 zuugle-postgres-db

falsalih@Fariss-MacBook-Pro zuugle-api % docker run -d --name zuugle-container -p 5432:5432 zuugle-postgres-db
f8cfb10d0a02203c4fcf05e616fd6c0c2552d36347e744971d7e478d3be3e569

Next step : Manuell diese leeren Folder anlegen: done

Next step  : 	npm run build

	> zuggle-api@1.0.0 build /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-
	 test/zuugle-api
	> babel src -d build

	src/config.js -> build/config.js
	src/index.js -> build/index.js
	src/jobs/sync.js -> build/jobs/sync.js
	src/jobs/syncData.js -> build/jobs/syncData.js
	src/jobs/syncDataApplicationSide.js -> build/jobs/syncDataApplicationSide.js
	src/jobs/syncDataFull.js -> build/jobs/syncDataFull.js
	src/jobs/syncFiles.js -> build/jobs/syncFiles.js
	src/jobs/syncFilesApplicationSide.js -> build/jobs/syncFilesApplicationSide.js
	src/jobs/syncGpxTours.js -> build/jobs/syncGpxTours.js
	src/knex.js -> build/knex.js
	src/knexTourenDb.js -> build/knexTourenDb.js
	src/knexfile.js -> build/knexfile.js
	src/knexfileTourenDb.js -> build/knexfileTourenDb.js
	src/middlewares/authenticate.js -> build/middlewares/authenticate.js
	src/routes/cities.js -> build/routes/cities.js
	src/routes/ranges.js -> build/routes/ranges.js
	src/routes/regions.js -> build/routes/regions.js
	src/routes/tours.js -> build/routes/tours.js
	src/utils/constants.js -> build/utils/constants.js
	src/utils/crud.js -> build/utils/crud.js
	src/utils/fileFunctions.js -> build/utils/fileFunctions.js
	src/utils/gpx/gpxUtils.js -> build/utils/gpx/gpxUtils.js
	src/utils/helper.js -> build/utils/helper.js
	src/utils/pdf/BrowserService.js -> build/utils/pdf/BrowserService.js
	src/utils/pdf/tourPdf.js -> build/utils/pdf/tourPdf.js
	src/utils/pdf/utils.js -> build/utils/pdf/utils.js
	src/utils/utils.js -> build/utils/utils.js
	src/utils/zuugleCors.js -> build/utils/zuugleCors.js

Next step  :  npm run import-data-full ( errors due to issues with Mcbook M1 chip) 

	> zuggle-api@1.0.0 import-data-full /Users/falsalih/Documents/ACTIVEFILE/
	Zuugle-api-test/zuugle-api
	> node build/jobs/syncDataFull.js

	/Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-test/zuugle-api/
	node_modules/sharp/lib/sharp.js:34
  	throw new Error(help.join('\n'));
  	^

	Error: 

I went through the following resources :
https://github.com/motdotla/dotenv/issues/560#issuecomment-1029392300
https://github.com/sw-yx/swyxdotio/issues/420
Alternatively:
https://stackoverflow.com/questions/71145145/npm-install-cannot-find-module-node-darwin-arm64-package-json-on-m1-chip 

Had to install Darwin /sharp of Node : https://www.npmjs.com/package/node-darwin-x64 
Sharp definition From : https://sharp.pixelplumbing.com/ 
The typical use case for this high speed Node.js module is to convert large images in common formats to smaller, web-friendly JPEG, PNG, WebP, GIF and AVIF images of varying dimensions.

Command:
	falsalih@Fariss-MacBook-Pro zuugle-api % npm install —
	platform=darwin --arch=x64 sharp

	> sharp@0.30.7 install /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-
	test/zuugle-api/node_modules/sharp
	> (node install/libvips && node install/dll-copy && prebuild-install) || (node 
	install/can-compile && node-gyp rebuild && node install/dll-copy)

	sharp: Downloading https://github.com/lovell/sharp-libvips/releases/
	download/v8.12.2/libvips-8.12.2-darwin-x64.tar.br
	sharp: Integrity check passed for darwin-x64
	npm WARN zuggle-api@1.0.0 No description
	npm WARN zuggle-api@1.0.0 No repository field.

	+ sharp@0.30.7
	updated 1 package and audited 928 packages in 9.042s

	34 packages are looking for funding
  	run `npm fund` for details

	found 16 vulnerabilities (2 low, 6 moderate, 8 high)
 	 run `npm audit fix` to fix them, or `npm audit` for details


So now it worked with this result:

Command:
	falsalih@Fariss-MacBook-Pro zuugle-api % npm run 
	import-data-full                      

	> zuggle-api@1.0.0 import-data-full /Users/falsalih/Documents/ACTIVEFILE/
	Zuugle-api-test/zuugle-api
	> node build/jobs/syncDataFull.js

	FULL LOAD:  23:25:09
	START SYNC TOURS:  23:25:09
	DONE SYNC TOURS:  23:25:11
	START SYNC FAHRPLAN:  23:25:11
	(Info: Handling  164730  rows fplan data.
	DONE SYNC FAHRPLAN:  23:26:26
	START SYNC CITIES:  23:26:26
	DONE SYNC CITIES:  23:26:26
	START MERGE FAHRPLAN:  23:26:26
	DONE MERGE FAHRPLAN:  23:26:32
	START FIX TOURS:  23:26:32
	DONE FIX TOURS:  23:26:32
	START WRITE KPIs:  23:26:32
	DONE WRITING KPIs:  23:26:32
	START FETCH PROVIDER:  23:26:32
	FETCHED PROVIDER:  23:26:32


Next step  :   npm run import-files

Command:
	falsalih@Fariss-MacBook-Pro zuugle-api %  npm run
 	import-files

Result , a whole bunch of files were created, messages ended with the following:

	END CREATE GPX ANREISE/ABREISE FILES:  00:11:11
	START CREATE GPX IMAGE FILES:  00:11:11
	Could not find expected browser (chrome) locally. Run `npm install` to 
	download the correct Chromium revision (1022525).
	END CREATE GPX IMAGE FILES:  00:11:11


Next step  :   npm run start

I got an error saying (excerpt): 
	Running on localhost:8080
	(node:48712) UnhandledPromiseRejectionWarning: Error: Could not find 
	expected browser (chrome) locally. Run `npm install` to download the correct 
	Chromium revision (1022525).
    	at ChromeLauncher.launch (/Users/falsalih/Documents/ACTIVEFILE/Zuugle-
	api-test/zuugle-api/node_modules/puppeteer/src/node/Chro		
	meLauncher.ts:127:15)

So I had to download the Chromium inside ./node_modules/puppeteer
Link : https://stackoverflow.com/questions/68051648/could-not-find-expected-browser-chrome-locally 

Command:
falsalih@Fariss-MacBook-Pro zuugle-api % cd ./node_modules/puppeteer
falsalih@Fariss-MacBook-Pro puppeteer % npm run install

Message:
	> puppeteer@16.2.0 install /Users/falsalih/Documents/ACTIVEFILE/Zuugle-
	   api-test/zuugle-api/node_modules/puppeteer
	> node install.js

	Downloading Chromium r1022525 - 118.4 Mb [====================] 
	100% 0.0s 
	Chromium (1022525) downloaded to /Users/falsalih/Documents/ACTIVEFILE/
	Zuugle-api-test/zuugle-api/node_modules/puppeteer/.local-chromium/	
	mac-1022525

Now retry of : npm run start , resulting console message:

		
	> zuggle-api@1.0.0 start /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-
	test/zuugle-api
	> nodemon --watch src --exec babel-node -- src/index.js

	[nodemon] 1.19.4
	[nodemon] to restart at any time, enter `rs`
	[nodemon] watching dir(s): src/**/*
	[nodemon] watching extensions: js,mjs,json
	[nodemon] starting `babel-node src/index.js`
	body-parser deprecated undefined extended: provide extended option src/
	index.js:66:27
	events.js:292
      	throw er; // Unhandled 'error' event
      	^

	Error: listen EADDRINUSE: address already in use :::8080

So I went into the index.js file to change the PORT value as follows:

	/* start api */
	let port = 8081;
	if(process.env.NODE_ENV === "production"){
    		port = 6060;
	}

Then retried again the npm run start, the resulting console message:

	> zuggle-api@1.0.0 start /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-
	   test/zuugle-api
	> nodemon --watch src --exec babel-node -- src/index.js

	[nodemon] 1.19.4
	[nodemon] to restart at any time, enter `rs`
	[nodemon] watching dir(s): src/**/*
	[nodemon] watching extensions: js,mjs,json
	[nodemon] starting `babel-node src/index.js`
	body-parser deprecated undefined extended: provide extended option src/
	index.js:66:27
	Running on localhost:8081

But going to the url : 
https://localhost:8081/ 
Gives me :
browser message —>  localhost sent an invalid response.
Developer tools: Network->Request headers we get the following:
sec-ch-ua: "Not?A_Brand";v="8", "Chromium";v="108", "Google Chrome";v="108"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "macOS"
Upgrade-Insecure-Requests: 1



Or the less secure one:
http://localhost:8081/
browser message —> Cannot GET /
Console ->  Failed to load resource: the server responded with a status of 404 (Not Found)

On the terminal the message is :

> zuggle-api@1.0.0 start /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-test/zuugle-api
> nodemon --watch src --exec babel-node -- src/index.js

[nodemon] 1.19.4
[nodemon] to restart at any time, enter `rs`
[nodemon] watching dir(s): src/**/*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `babel-node src/index.js`
body-parser deprecated undefined extended: provide extended option src/index.js:66:27
Running on localhost:8081
[nodemon] restarting due to changes...
[nodemon] starting `babel-node src/index.js`
pupeteer browser successfully closed...
body-parser deprecated undefined extended: provide extended option src/index.js:66:27
Running on localhost:8081
[nodemon] restarting due to changes...
[nodemon] starting `babel-node src/index.js`
pupeteer browser successfully closed...
body-parser deprecated undefined extended: provide extended option src/index.js:66:27
Running on localhost:8081





Seems to me now:

Using the error message in the terminal:
	body-parser deprecated undefined extended: provide extended option src/
	index.js:66:27
The line 66 refers to a call to BrowserService which is a module that calls Puppteer which uses Chromium, maybe Chromium has a security problem on my laptop which means I have to install Chromium again (globally even)

or else: issue lays with the Container, the path may be unavailable with the current configuration. (Although I don’t see how this can happen as we have built the container already and not getting any error messages there?)










Another try : revert back to port 8080 and attempt to improve from there.

I used this command to display the whole list of current used ports :

sudo lsof -i -n -P | grep TCP

Result :
…
…
…
httpd      2231         daemon   20u  IPv6 0x76ce0ff9f466658f      0t0    TCP *:443 (LISTEN)
httpd      2231         daemon   21u  IPv4 0x76ce0ff9f1e3ded7      0t0    TCP *:* (CLOSED)
Google     2956       falsalih   19u  IPv4 0x76ce0ff9f2c3f297      0t0    TCP 10.0.0.41:58694->18.192.47.91:443 (ESTABLISHED)
Google     2956       falsalih   21u  IPv4 0x76ce0ff9f2c3dc77      0t0    TCP 10.0.0.41:58685->142.250.27.188:5228 (ESTABLISHED)
Google     2956       falsalih   28u  IPv4 0x76ce0ff9f1c248b7      0t0    TCP 10.0.0.41:58688->140.82.113.25:443 (ESTABLISHED)
Google     2956       falsalih   35u  IPv4 0x76ce0ff9f2c49ed7      0t0    TCP 10.0.0.41:58698->52.215.192.132:443 (ESTABLISHED)
Code\x20H 36591       falsalih   37u  IPv4 0x76ce0ff9f2c569e7      0t0    TCP 127.0.0.1:59780 (LISTEN)
Code\x20H 36591       falsalih   59u  IPv4 0x76ce0ff9f1c2dc77      0t0    TCP 127.0.0.1:59967 (LISTEN)
node      48712       falsalih   23u  IPv6 0x76ce0ff9f4667c0f      0t0    TCP *:8080 (LISTEN)

I returned the index.js reference to 8081 back to 8080, so of course the error result of :
	body-parser deprecated undefined extended: provide extended option src/index.js:66:27
	events.js:292
      	throw er; // Unhandled 'error' event
      	^
	
Error: listen EADDRINUSE: address already in use :::8080

Reappeared.

In my bash I did the following , to free all possible 8080 ports:


Fariss-MacBook-Pro:zuugle-api falsalih$ docker stop f8cfb10d0a02
f8cfb10d0a02
Fariss-MacBook-Pro:zuugle-api falsalih$ docker build -t zuugle-postgres-db ./
[+] Building 1.5s (7/7) FINISHED                                                                                           
Fariss-MacBook-Pro:zuugle-api falsalih$ killport() { kill -9 $(lsof -t -i:"$@"); } # define fcn kill process on specified port number
Fariss-MacBook-Pro:zuugle-api falsalih$ echo 'killport() { kill -9 $(lsof -t -i:"$@"); } # kill process on specified port number' >> ~/.bashrc
Fariss-MacBook-Pro:zuugle-api falsalih$ killport 8080
Fariss-MacBook-Pro:zuugle-api falsalih$ 

Then 
Result :
node      49914       falsalih   23u  IPv6 0x76ce0ff9f4666d0f      0t0    TCP *:8080 (LISTEN)
node      49914       falsalih   36u  IPv4 0x76ce0ff9f0f188b7      0t0    TCP 127.0.0.1:59032->127.0.0.1:59031 (ESTABLISHED)
Chromium  49917       falsalih   19u  IPv4 0x76ce0ff9f2c37da7      0t0    TCP 127.0.0.1:59031 (LISTEN)
Chromium  49917       falsalih   20u  IPv4 0x76ce0ff9f1c23da7      0t0    TCP 127.0.0.1:59031->127.0.0.1:59032 (ESTABLISHED)


On the node console, I got the following after starting node:







falsalih@Fariss-MacBook-Pro zuugle-api % npm start

> zuggle-api@1.0.0 start /Users/falsalih/Documents/ACTIVEFILE/Zuugle-api-test/zuugle-api
> nodemon --watch src --exec babel-node -- src/index.js 

[nodemon] 1.19.4
[nodemon] to restart at any time, enter `rs`
[nodemon] watching dir(s): src/**/*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `babel-node src/index.js`
body-parser deprecated undefined extended: provide extended option src/index.js:66:27
Running on localhost:8080


But again , I am unable to open localhost:8080 and shows me a node error of “ Cannot GET / “
On browser console:
“Failed to load resource: the server responded with a status of 404 (Not Found) “

Further researched:
https://stackoverflow.com/questions/35557115/node-inspector-in-docker-does-not-load-sources  

Reply is :

The problem here is that node inspector is trying to connect to localhost/127.0.0.1, i.e. local to that container, not local to your host. When you run in bridge networking (default), each container is on its own IP.
You could quickly resolve this with either of these options:
Use host networking for both containers
In this case the port forwarding you configured is not necessary any longer
Use host networking just for the node inspector container
In this case you still need port 5858 mapped to host but no longer the port 8080 on node inspector

FAL: don’t know how to emulate this solution on my local zuugle code.
The only remaining possibility for solving this is: 
Look into the error :
body-parser deprecated undefined extended: provide extended option src/index.js:66:27

This is solved by adding an extended option to the express.use({extended: false}) Line 32 in index.js


Another time sharp error reapeared :
	Error :
		Something went wrong installing the "sharp" module
		Cannot find module '../build/Release/sharp-darwin-x64.node'

	Solution : the solution is within error message :
			$npm install --ignore-scripts=false --foreground-scripts --verbose sharp

Error :
	Could not find expected browser (chrome) locally. Run `npm install` to download the correct Chromium revision (1022525).
    	at ChromeLauncher.launch (/Users/falsalih/Documents/ACTIVEFILE/Zuugle/zuugle-api/node_modules/puppeteer/src/node/ChromeLauncher.ts:127:15)

Solution :  $node node_modules/puppeteer/install.js

Result message: Chromium (1022525) downloaded to /Users/falsalih/Documents/ACTIVEFILE/Zuugle/zuugle-api/node_modules/puppeteer/.local-chromium/				      mac-1022525

Error :
	Some images show 404s in Network/ developer tools, 
	seems all are of type text/html
In the network of the developer tools, we can click one one of these links to missing images and we find the called url as follows:
Request URL: http://localhost:8080/public/gpx-image/bahnzumberg_11372_gpx_small.jpg
This gpx image does not exist in the path mentioned in URL, file being ./public/gpx-image

So I tried to re-do the 
    1. npm run build
    2. npm run import-data-full
	3. Alternativ für Delta Load (an jedem folgenden Tag): npm run import-data
    4. npm run import-files

but i get error messages at the 4th step

	createImageFromMap error:  Error: net::ERR_CONNECTION_REFUSED at http://localhost:8080/public/headless-leaflet/index.html?gpx=http://localhost:8080/public/gpx/bergfexat_a876451c2dce956a1baec7bc9eb028a7e194d622.gpx
    at navigate (/Users/falsalih/Documents/ACTIVEFILE/Zuugle/zuugle-api/node_modules/puppeteer/lib/cjs/puppeteer/common/Frame.js:199:23)
so must check createImageFromMap , it shows up in 2 files , gpxUtils.js, and tours.js
going down that RH => 
 

TEST FOR GITHUB 